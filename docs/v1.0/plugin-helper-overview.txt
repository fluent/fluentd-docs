# Using Plugin Helpers

Fluentd has plugin helpers which encapsulates and makes easy to implement commonly implemented features in plugins such as timer, threading, formatting, parsing, ensuring configuration syntax's backward compatibility.

## How To Use

To use plugin helpers, it needs to call `helpers(*snake_case_symbols)` method with snake case symbols.

    :::text
    helpers :timer, :storage, :compat_parameters

Then, `helpers` method will include `Timer`, `Storage`. and `CompatParameters` plugin helpers.

## Built-in Plugin Helpers

- [child_process](api-plugin-helper-child_process)
- [compat_parameters](api-plugin-helper-compat_parameters)
- [event_emitter](api-plugin-helper-event_emitter)
- [event_loop](api-plugin-helper-event_loop)
- [extract](api-plugin-helper-extract)
- [formatter](api-plugin-helper-formatter)
- [inject](api-plugin-helper-inject)
- [parser](api-plugin-helper-parser)
- [record_accessor](api-plugin-helper-record_accessor)
- [server](api-plugin-helper-server)
- [socket](api-plugin-helper-socket)
- [storage](api-plugin-helper-storage)
- [thread](api-plugin-helper-thread)
- [timer](api-plugin-helper-timer)
