# Quickstart Guide

Let's get started with **Fluentd**! **Fluentd** is a fully free and fully open-source log collector that instantly enables you to have a '**Log Everything**' architecture with <a href="http://fluentd.org/plugin/">125+ types of systems</a>.

<center>
<img src="/images/fluentd-architecture.png" width="450px"/><br /><br />
</center>

Fluentd treats logs as JSON, a popular machine-readable format. It is written primarily in C with a thin-Ruby wrapper that gives users flexibility.

Fluentd's scalability has been proven in the field: its largest user currently collects logs from **50,000+ servers**.

## Step 1: Installing Fluentd

Please follow the installation/quickstart guides below that matches your environment.

* [Install Fluentd by RPM package](install-by-rpm) (Redhat Linux)
* [Install Fluentd by Deb package](install-by-deb) (Ubuntu/Debian Linux)
* [Install Fluentd by MSI package](install-by-msi) (Windows msi)
* [Install Fluentd by Ruby Gem](install-by-gem)
* [Install Fluentd from source](install-from-source)

## Step 2: Use Cases

The articles shown below cover the typical use cases of Fluentd. Please refer to the article(s) that suits your needs.

  * Use Cases
    * [Data Search like Splunk](free-alternative-to-splunk-by-fluentd)
    * [Data Filtering and Alerting](splunk-like-grep-and-alert-email)
    * [Data Analytics with Treasure Data](http-to-td)
    * [Data Collection to MongoDB](apache-to-mongodb)
    * [Data Collection to HDFS](http-to-hdfs)
    * [Data Archiving to Amazon S3](apache-to-s3)
  * Basic Configuration
    * [Config File](config-file)
  * Application Logs
    * [Ruby](ruby), [Java](java), [Python](python), [PHP](php), [Perl](perl), [Node.js](nodejs), [Scala](scala)
  * Happy Users :)
    * [Users](users)

## Step 3: Learn More

The articles shown below will provide detailed information for you to learn more about Fluentd.

  * [Architecture Overview](architecture)
  * [Life of a Fluentd Event](life-of-a-fluentd-event)
  * Plugin Overview
    * [Input Plugins](input-plugin-overview)
    * [Output Plugins](output-plugin-overview)
    * [Buffer Plugins](buffer-plugin-overview)
    * [Filter Plugins](filter-plugin-overview)
    * [Parser Plugins](parser-plugin-overview)
    * [Formatter Plugins](formatter-plugin-overview)
  * [High Availability Configuration](high-availability)
  * [FAQ](faq)
