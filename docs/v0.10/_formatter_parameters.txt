#### out_file

Output time, tag and json record separated by a delimiter:

    :::text
    time[delimiter]tag[delimiter]record\n

Example:

    :::text
    2014-06-08T23:59:40[TAB]file.server.logs[TAB]{"field1":"value1","field2":"value2"}\n

`out_file` format has several options to customize the format.

    :::text
    delimiter SPACE   # Optional, SPACE or COMMA. "\t"(TAB) is used by default
    output_tag false  # Optional, defaults to true. Output the tag field if true.
    output_time true  # Optional, defaults to true. Output the time field if true.

For this format, the following common parameters are also supported.

INCLUDE: _formatter_common_parameters

#### json

Output a json record without the time or tag field:

    :::text
    {"field1":"value1","field2":"value2"}\n

For this format, the following common parameters are also supported.

INCLUDE: _formatter_common_parameters

#### hash

Output a record as ruby hash without the time or tag field:

    :::text
    {"field1"=>"value1","field2"=>"value2"}\n

For this format, the following common parameters are also supported.

INCLUDE: _formatter_common_parameters

#### ltsv

Output the record as [LTSV](http://ltsv.org):

    :::text
    field1[label_delimiter]value1[delimiter]field2[label_delimiter]value2\n

`ltsv` format supports `delimiter` and `label_delimiter` options.

    :::text
    format ltsv
    delimiter SPACE   # Optional. "\t"(TAB) is used by default
    label_delimiter = # Optional. ":" is used by default

For this format, the following common parameters are also supported.

INCLUDE: _formatter_common_parameters

#### single_value

Output the value of a single field instead of the whole record. Often used in conjunction with [in_tail](in_tail)'s `format none`.

    :::text
    value1\n

`single_value` format supports the `add_newline` and `message_key` options.

    :::text
    add_newline false # Optional, defaults to true. If there is a trailing "\n" already, set it "false"
    message_key my_field # Optional, defaults to "message". The value of this field is outputted.

#### csv

Output the record as CSV/TSV:

    :::text
    "value1"[delimiter]"value2"[delimiter]"value3"\n

`csv` format supports the `delimiter` and `force_quotes` options.

    :::text
    format csv
    fields field1,field2,field3
    delimiter \t   # Optional. "," is used by default.
    force_quotes false # Optional. true is used by default. If false, value won't be framed by quotes.

For this format, the following common parameters are also supported.

INCLUDE: _formatter_common_parameters

#### stdout

This format is aimed to be used by stdout plugins.

Output time, tag and formatted record as follows:

    :::text
    time tag: formatted_record\n

Example:

    :::text
    2015-05-02 12:12:17 +0900 tag: {"field1":"value1","field2":"value2"}\n

`stdout` format has a following option to customize the format of the record
part.

    :::text
    output_type format # Optional, defaults to "json". The format of
    `formatted_record`. Any formatter plugins can be specified.

For this format, the following common parameters are also supported.

INCLUDE: _formatter_common_parameters

